[{"content":"相关概念 SSL即安全套接字协议，是为网络通信提供安全及数据完整性的一种安全协议。\n数字证书是一个经证书授权中心数字签名的包含公开密钥拥有者信息以及公开密钥的文件。最简单的证书包含一个公开密钥、名称以及证书授权中心的数字签名。\n一般证书分有三类，根证书、服务器证书和客户端证书。\n根证书是生成服务器证书和客户端证书的基础，是信任的源头，也可以叫自签发证书，即CA证书。\n服务器证书由根证书签发，配置在服务器上的证书。\n客户端证书由根证书签发配置在服务器上，并发送给客户，让客户安装在浏览器里的证书。\n公钥是公开的，用来传输对方的随机密钥，只有通过私钥才能解密，这时就只有双方知道密钥了，从而达到安全传输的目的。\n私钥是自己保留，只有通过私钥才能解密公钥加密的数据，对于私钥的使用可以设置密码。\n最常见的单向认证为例，简述一下通信过程：\n客户端向服务器发送请求。\n服务器将包含公钥的证书通过明文发送给客户端。\n客户端通过根证书验证服务器证书是否有效。\n如果有效，客户端生成一个随机密钥，也叫对称加密密钥，使用服务器的公钥进行加密传输。\n服务器通过私钥解密客户端传输的对称加密密钥。\n这时只有服务器和客户端知道这个对称加密密钥，双方可以进行对称加密传输。\nOpenSSL使用教程 OpenSSL是一个安全套接字层密码库，其包括常用的密码算法、常用的密钥生成和证书封装管理功能及SSL协议，并提供了一个丰富的应用程序以供测试。\n/usr/lib/ssl/openssl.cnf是配置文件。\nOpenSSl是一个开源项目，其由三个部分组成：\nopenssl命令行工具。\nlibencrypt加密算法库。\nlibssl加密模块应用库。\nopenssl命令工具有两种运行模式：交换模式和批处理模式。直接输入openssl回车即可进入交互模式，而输入带命令选项的openssl命令则进行批处理模式。\n命令 查看当前OpenSSL版本\nopenssl version -a\n对称加密enc\nopenssl enc -ciphername [-in filename] [-out filename] [-pass arg] [-e] [-d] [-a/-base64] [-A] [-k password] [-kfile filename] [-K key] [-iv IV] [-S salt] [-salt] [-nosalt] [-z] [-md] [-p] [-P] [-bufsize number] [-nopad] [-debug] [-none] [-engine id]\n选项：\n-e:：加密；\n-d：解密；\n-ciphername：ciphername为相应的对称加密算命名字，如-des3、-ase128、-cast、-blowfish等等\n-a/-base64：使用base-64位编码格式\n-salt：自动插入一个随机数作为文件内容加密，默认选项；\n-in FILENAME：指定要加密的文件的存放路径；\n-out FILENAME：指定加密后的文件的存放路径\n单向加密dgst\nopenssl dgst [-md5|-md4|-md2|-sha1|-sha|-mdc2|-ripemd160|-dss1] [-c] [-d] [-hex] [-binary] [-out filename] [-sign filename] [-keyform arg] [-passin arg] [-verify filename] [-prverify filename] [-signature filename] [-hmac key] [file\u0026hellip;]\n选项：\n[-md5|-md4|-md2|-sha1|-sha|-mdc2|-ripemd160|-dss1]：指定一种单向加密算法；\n-out FILENAME：将加密的内容保存到指定的文件中；\n单向加密除了openssl dgst工具还有：md5sum，sha1sum，sha224sum，sha256sum ，sha384sum，sha512sum。\n加密密码password，生成密码的hash离散值。\nopenssl passwd [-crypt] [-1] [-apr1] [-salt string] [-in file] [-stdin] [-noverify] [-quiet] [-table] {password}\n选项：\n-salt STRING：添加随机数；\n-in FILE：对输入的文件内容进行加密；\n-stdin：对标准输入的内容进行加密；\n生成随机数rand\nopenssl rand [-out file] [-rand file(s)] [-base64] [-hex] num\n选项：\n-base64：以base64编码格式输出。\n-hex：使用十六进制编码格式。\n-out FILE：将生成的内容保存在指定的文件中。\n生成密钥对，genrsa生成私钥，然后再使用rsa从私钥中提取公钥。\nopenssl genrsa [-out filename] [-passout arg] [-des] [-des3] [-idea] [-f4] [-3] [-rand file(s)] [-engine id] [numbits]\n选项：\n-out FILENAME：将生成的私钥保存至指定的文件中；\n[-des] [-des3] [-idea]：指定加密算法。\nnumbits：指明生成的私钥大小，默认是512。\nopenssl rsa [-inform PEM|NET|DER] [-outform PEM|NET|DER] [-in filename] [-passin arg] [-out filename] [-passout arg] [-sgckey] [-des] [-des3] [-idea] [-text] [-noout] [-modulus] [-check] [-pubin] [-pubout] [-engine id]\n选项：\n-in FILENAME：指明私钥文件的存放路径。\n-out FILENAME：指明将公钥的保存路径。\n-pubout：根据提供的私钥，从中提取公钥。\n创建CA和申请证书，req用于生成自签证书\nopenssl req [-inform PEM|DER] [-outform PEM|DER] [-in filename] [-passin arg] [-out filename] [-passout arg] [-text] [-pubkey] [-noout] [-verify] [-modulus] [-new] [-rand file(s)] [-newkey rsa:bits] [-newkey dsa:file] [-nodes] [-key filename] [-keyform PEM|DER] [-keyout filename] [-[md5|sha1|md2|mdc2]] [-config filename] [-subj arg] [-multivalue-rdn] [-x509] [-days n] [-set_serial n] [-asn1-kludge] [-newhdr] [-extensions section] [-reqexts section] [-utf8] [-nameopt] [-batch] [-verbose] [-engine id]\n选项：\n-x509：专用于生成CA自签证书\n-days：指定证书的有效期限，单位为day，默认是365天\n-inform arg ：指定输入文件格式，可以为DER或PEM，默认为PEM。\n-outform arg：指定输出文件格式，可以为DER或PEM，默认为PEM。\n-in arg： 指定输入文件。\n-out arg：指定输出文件。\n-new ：创建新的证书请求文件。\n-key file： 指定生成证书用到的私钥文件。\n-keyform arg： 指定创建证书请求的私钥文件的格式，可以为DER或PEM，默认为PEM。\n-passion arg：指定私钥文件的口令保护来源。\n-verify： 校验证书请求文件的主体签名是否有效。\n-noout：不打印证书请求信息。\n-text：文件打印证书请求文件。\n-modulus：输出证书请求的模数\n-keyout：指定生成的私钥文件名\nca命令用于在CA服务器上签署或吊销证书\nopenssl ca [-verbose] [-config filename] [-name section] [-gencrl]\n[-revoke file] [-crl_reason reason] [-crl_hold instruction] [-crl_compromise time]\n[-crl_CA_compromise time] [-subj arg] [-crldays days][-crlhours hours]\n[-crlexts section] [-startdate date] [-enddate date]\nx509\n选项：\n-noout：不输出加密的证书内容。\n-serial：输出证书序列号。\n-dates：显示证书有效期的开始和终止时间。\n-subject：输出证书的subject\ncrl工具，用于处理PME或DER格式的CRL文件\n使用案例 一、生成证书签名请求(CSR) 1.1 生成私钥和CSR 小面命令创建一个2048位的私钥（domain.key）以及一个CSR（domain.csr）:\nopenssl req -newkey rsa:2048 -nodes -keyout domain.key -out domain.csr\n1.2 使用已有私钥生成CSR 如果你已经有了一个私钥，那么可以直接用它来向CA申请证书。下面命令使用一个已有的私钥（domain.key）创建一个新的CSR（domain.csr）\nopenssl req -key domain.key -new -out domain.csr\n1.3 使用已有的证书和私钥生成CSR 如果你需要续订已有的证书，但你和CA都没有原始的CSR，那可以再次生成CSR。\nopenssl x509 -in domain.crt -signkey domain.key -x509toreq -out domain.csr\n二、生成SSL证书 如果你只是想用SSL证书加固你的web服务器，但是并不需要CA签名的证书，那么简单的方法是自签证书。\n2.1 生成自签名证书 下面的命令创建一个2048的私钥（domain.key）以及一个自签名证书（domain.crt）。\nopenssl req -newkey rsa:2048 -nodes -keyout domain.key -x509 -days 365 -out domain.crt\n2.2 使用已有私钥生成自签名证书 openssl req -key domain.key -new -x509 -days 365 -out domain.crt\n2.3 使用已有的私钥和CSR生成自签名证书 openssl x509 -signkey domain.key -in domain.csr -req -days 365 -out domain.crt\n三、查看证书 3.1 查看CSR条目 下面的命令可以查看CSR文件的明文文本并进行验证\nopenssl req -text -noout -verify -in domain.csr\n3.2 查看证书条目 openssl x509 -text -noout -in domain.crt\n3.3 验证证书是否由CA签发 下面命令用来验证证书（domain.crt）是否由证书颁发机构（ca.crt）签发\nopenssl verify -verbose -CAFile ca.crt domain.crt\n四、私钥生成与验证 4.1 创建私钥 下面创建一个密码保护的2048位私钥domain.key\nopenssl genrsa -des3 -out domain.key 2048\n4.2 验证私钥 下面命令可以验证私钥domain.key是否有效\nopenssl rsa -check -in domain.key\n4.3 验证私钥与证书和CSR匹配 下面命令验证私钥domain.key是否与证书domain。crt以及CSR匹配：如果下面三个命令的输出一致，那么有极高的概率可以人为私钥、证书和CSR是相关的\nopenssl rsa -noout -modulus -in domain.key | openssl md5 openssl x509 -noout -modulus -in domain.crt | openssl md5 openssl req -noout -modulus -in domain.csr | openssl md5\n4.4 加密私钥 下面命令将私钥unencrypted.key加密，输出加密后的私钥encrypted.key\nopenssl rsa -des3 -in unencrypted.key -out encrypted.key\n4.5 解密私钥\n下面命令将加密私钥encrypted.key解密，并输出明文结果\nopenssl rsa -in encrypted.key -out decrypted.key\n五、证书格式转换 5.1 PEM转DER openssl x509 -in domain.crt -outform der -out domain.der\n5.2 DER转PEM openssl x509 -inform der -in domain.der -out domain.crt\n5.3 PEM转PKCS7 openssl crl2pkcs7 -nocrl -certfile domain.crt -certfile ca-chain.crt -out domain.p7b\n5.4 PKCS7转换为PEM openssl pkcs7 -in domain.p7b -print_certs -out domain.crt\n5.5 PEM转换为PKCS12 openssl pkcs12 -inkey domain.key -in domain.crt -export -out domain.pfx\n5.6 PKCS12转换为PEM openssl pkcs12 -in domain.pfx -nodes -out domain.combined.crt\n","date":"2022-06-23T22:14:03+08:00","image":"https://jtntr.github.io/luolileyuan-blog/p/openssl%E6%95%99%E7%A8%8B/ced7813d880f11ebb6edd017c2d2eca2_hu2eb8e9977f4e9340435d7297adf43360_1943157_120x120_fill_q75_box_smart1.jpg","permalink":"https://jtntr.github.io/luolileyuan-blog/p/openssl%E6%95%99%E7%A8%8B/","title":"OpenSSL教程"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://jtntr.github.io/luolileyuan-blog/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_120x120_fill_q75_box_smart1.jpg","permalink":"https://jtntr.github.io/luolileyuan-blog/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating. — Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://jtntr.github.io/luolileyuan-blog/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://jtntr.github.io/luolileyuan-blog/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"猫中毒 网易云 ","date":"2019-03-10T00:00:00Z","image":"https://jtntr.github.io/luolileyuan-blog/p/%E8%A7%86%E9%A2%91%E4%B8%8E%E9%9F%B3%E4%B9%90/asoul%E5%A3%81%E7%BA%B8_huf2b0dff180dd9cf47cc8a1349fb6fa91_67141_120x120_fill_q75_box_smart1.jpg","permalink":"https://jtntr.github.io/luolileyuan-blog/p/%E8%A7%86%E9%A2%91%E4%B8%8E%E9%9F%B3%E4%B9%90/","title":"视频与音乐"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://jtntr.github.io/luolileyuan-blog/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu958d513eeefe5556a31d065479ecc5ac_14205_120x120_fill_q75_box_smart1.jpg","permalink":"https://jtntr.github.io/luolileyuan-blog/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://jtntr.github.io/luolileyuan-blog/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://jtntr.github.io/luolileyuan-blog/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_huf941de4769045cdfa8c9ee7036519a2a_35369_120x120_fill_q75_box_smart1.jpg","permalink":"https://jtntr.github.io/luolileyuan-blog/p/emoji-support/","title":"Emoji Support"}]